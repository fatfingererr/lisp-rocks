#+OPTIONS: toc:nil
#+BEGIN_SRC json :noexport:
{:title "〈為你自己學Git〉閱讀筆記" :layout :post :tags ["git" "reading"] :toc false}
#+END_SRC
* 　


** 　

對於 Git 還是始終不太熟悉，於是在朋友推薦下入手了這本書

原本想買另一本歐若禮更複雜更難那本，但先看完這本再說吧！

底下簡單留下自己的閱讀筆記，大部分應該都是網路找的到的指令

<br>

** 使用者設定

#+BEGIN_SRC bash
# 設定
git config --global user.name "name"
git config --global user.email "email@mail.com"
# 檢視
git config --list
# local 不同作者
git config --local user.name "foo"
git config --local user.email "bar@foo.com"
#+END_SRC

local 設定可以針對工作上切換成工作 Email ，在 global 方面就是 GitHub 帳戶

<br>

** 自訂縮寫

#+BEGIN_SRC bash
git config --global alias.co checkout
git config --global alias.br branch
git config --global alias.st status
#+END_SRC

也可以對附加參數做縮寫

#+BEGIN_SRC bash
git config --global alias.l "log --oneline --graph"
git l # 等同 git log --oneline --graph 意思
# 也可以把 commit msg 包含進來
git config --global alias.ls 'log --graph --pretty=format:"%h <%an> %ar %s"'
#+END_SRC

也可以直接在 =~/.gitconfig= 修改

#+BEGIN_SRC bash
[alias]
  co = checkout
  br = branch
  st = status
  l = log --oneline --graph
  ls log --graph --pretty=format="%h <%an> %ar %s"
#+END_SRC

<br>

** commit

懶惰單行 add + commit : =git commit -a -m "update content"=

** 查看 log

只找某人的 log

#+BEGIN_SRC bash
git log --oneline --author="somebody"
# 查找兩人
git log --oneline --author="someone/|anotherone"
#+END_SRC

用正則表達式搜尋

#+BEGIN_SRC bash
git log --oneline --grep "wtf"
#+END_SRC

搜尋哪些 commit 有用到這個字

#+BEGIN_SRC bash
git log -S "someword"
#+END_SRC

查找時間

#+BEGIN_SRC bash
git log --oneline --since="9am" --until="12am"
# 從特定日期起的指定時間
git log --oneline --since="9am" --until="12am" --after="2017-01"
#+END_SRC

<br>

** 刪除檔案

目前看到 p.53 ... 繼續作筆記


<br>

** 參考資料

1. [[https://kaochenlong.com/2017/09/19/learn-git-for-your-own-good/][為你自己學 Git - 高見龍]]
